dev: "true"
# Application/Api
# {
app:
  # namespace: "dev"
  namespace: "preview"
# }

# StorageClass
# {
storageclass:
- name: "fast"
  provisionner: "k8s.io/minikube-hostpath" # "kubernetes.io/gce-pd"
  type: # pd-ssd
# }
# Rabbitmq
# {
rabbitmq:
  image: "rabbitmq:3.7"
  namespace: "rabbitmq"
  replica: "1"
  affinity_key: "services"
  affinity_selector: "rabbitmq"
  storage_size: "1Gi"
  storage_class: "fast"
  heartbeat: "600"
  vhost_name: "dev"
  cookie: "dGVzdDEyMzQ="
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 100m
      memory: 512Mi
# } 

# Redis
# {
redis:
  image: "redis:3.2.1"
  namespace: "redis"
  replica: "1"
  storage_size: "100Mi"
  storage_class: "fast"
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 100m
      memory: 100Mi
# } 

# MongoDb
# {
mongodb:
  image: "mongo"
  namespace: "mongodb"
  replica: "1"
  affinity_key: "app"
  affinity_selector: "mongodb"
  storage_size: "1Gi"
  storage_class: "fast"
  resources:
    requests:
      cpu: 0.2m
      memory: 200Mi
    limits:
      cpu: 1m
      memory: 512Mi
# }


# Monstache
# {
monstache:
  image: "rwynn/monstache:4.2.1"
  namespace: "monstache"
  replica: "1"
  cluster_name: "beamery"
  resume_name: "beamery"
  database_prefix: "beamery-preview"
  es_prefix: "preview-"
  mongo_url: "mongodb://SeedAdmin:helloKitty@mongodb:27017/?authSource=admin&replicaSet=RS-BeameryPreview-0"
  mongo_endpoints: [ "10.128.0.7", "10.128.0.8", "10.128.0.9" ]
  is_verbose: "true"
  cert_ES: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREJWTVJVd0V3WURWUVFLREF4Q1pXRnQKWlhKNUlFeDBaQzR4SFRBYkJnTlZCQXNNRkVKbFlXMWxjbmtnVEhSa0xpQlNiMjkwSUVOQk1SMHdHd1lEVlFRRApEQlJDWldGdFpYSjVJRXgwWkM0Z1VtOXZkQ0JEUVRBZUZ3MHhOekF4TURZeE1ERTJNVE5hRncweU56QXhNRFl4Ck1ERTJNVE5hTUZVeEZUQVRCZ05WQkFvTURFSmxZVzFsY25rZ1RIUmtMakVkTUJzR0ExVUVDd3dVUW1WaGJXVnkKZVNCTWRHUXVJRkp2YjNRZ1EwRXhIVEFiQmdOVkJBTU1GRUpsWVcxbGNua2dUSFJrTGlCU2IyOTBJRU5CTUlJQgpJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeWlnR2xvLzV3bGFuUkc2NW8wRFQ4LzRyCmNJbEd5V1dUWDF0aGxQZWx0WDFnZzNub3NkdVY3a0ZiRHhGRWdYZEtEemd2WlBMT1V2UG5ZUFdFQTc0elhNdmgKcVBEbVlLWlhtd2J3QW5Xdzh4N3cza1ZFbzhSSWJOaENSZ1RkbjRVMUFDWG8xVXY4SW1qTHZaajdmWWdZd0hDTgpvNTBsdG9aTW8yNitSb1B3TVJOQzI1M2MwdGNuVUpjR3JOY2s1UGhrSXRZemlhUXpGb05ZOTNvOEdIWEM3U2YwCktOd015NzlwclB0Ty9RMUJmbDhLWFBiSHdUSFdwckVkYTBxbWxvRWZRMlRualNkRmlhN1plalcrY3RBbU9paGIKRUNxajhOZHFxZC9HL1UyeG10OXZXU2ZyVVVzejk5aTg0THZIbUd5SmxDcHdMUFh5ZitYTGV1V1dJQVl5UVFJRApBUUFCbzJNd1lUQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVHbnc5SjFhVG1WTXBpM2pyeVNWT2ZIb0pueTB3SHdZRFZSMGpCQmd3Rm9BVUdudzlKMWFUbVZNcGkzanIKeVNWT2ZIb0pueTB3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUE5THdQYXNSSG11anhaRFlBZkcySlZidDdINQo5bSs5bGVkWTNvRzZ4R2NKaHdNQTVtYU9sc3BJNVZNMHQyUEdVVEcwMTRMaVhsaEg2cHB6TE4wOElob3RtR2ZWCktEWW55dWYwK1JhZmNpY01MQ0xKZjZtcHFBaHIwck1PMTlublFZWGNsYWpURzY1bUNiaS9LTWs2L1gxRzh3OFIKNVlwck1wNlVqMzNwejk4VzBYd0l3ZmhGbVFoelNEZzJuTk1EZWJEWHFQRjA0Tk1XK1J6K3dxdWJCNytVaE5OWApqdzVycHZacjRGQ0RVbytWdkFxSFdGbjZMS3FBZ3RTV0FIK1NtcXVOUXY5WUJvSDA5KzZXTnlYckNQTVBRYXg3ClBqNUZYZk0zNy95YnZDZ1pUSXNFenBkU1lhWnRhWXdLbEVlNE1MeXd2MWowcmdZQ0dKK3BKRXRZME1BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  cert_mongo: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREY2UnZTS08rWm1IejkKUDdHbDdSUGxVSDI0SE1MM2VlTXNSaXJnOEJSZEVYNDVERWZCRVEwNFJXYnJObDNxUjN1Vk4ySXBMaUZPeHZNTApoanAzMFVvMDY0eFNzYjRMNjhzbE82aC9zYXd5STc4Wlg4SEgwL3pLc2pRWG5JV01HUitwZHI2dHg2T2xoek9SCjBJcEYzK0JmUmlRbWtvQ0NITTBYTmpjN0IwbjErRjhEOWUwaEh4ZUM1TFpIZ3Q5dnlFenVQeEYydEZLTzJtRi8KL2JGYzh6STFIOEVBZHZYT3RUVmxFN3dqOGM5TXZ1cHNkOG9hb1g0ZzJtbkcvUThrQjJ0MHZkL1E2b3RYSWlYYQpXaHZQLzJzWHV3NHVwaGh1cFA2ZkVpd2p0T3ZrZU1aTDRvM09VOWlSRHZGamJCZXlQVk1heUFCUjVQdkVlbE9yCnM2eWNsakYxQWdNQkFBRUNnZ0VBWTZDUVY4QXh0VkZWQWl0eEkwVHdNZ3pON01QVnhieS9Ca2VnU0RHekhwS3kKeHNjT3kvcm9lNzQ4TEFYblN3dUhBN3VvbDNCWVpnNnl4TWRpWVhTaTlYYnA0YXNHTDN3WWZIckd2TmxWQkx5SAo4NThIcnE5aFh5eE1HdUs1TzZoZUR2SHUxUTVkcS9NZW03V3VGYlM0ZjEyUXp6WUtxUFVVclMybXFmbG1Xd0kwCmwzc1dLa2pxVEFPNXVHMnRYVkFGeDViV2lncFpBcUdqNmIvZW0xbDMrNUEzRGpHRVErNTFZWUg2aHBYYS91YysKWnNrWDJtVE52WVgwUGZyclJYYkpUaWZtaVBQc0x3Y1A0SHB4ckNJb0pnbkROTlNDLzVuQmNKSG02bXVERXNGawpHOEJuSmJoVllIYVh5bWl2OThmR1dPSEhLNm1STmFHMHpMckhwTVR4QVFLQmdRRHlxdTZqVEMwUEJIaDk4MWtWCnVldGRnR0lub20vQW5OUXRUUmF1VndKNmNVTjhwZFM1cURDdnNKNmNDcS9JQ0N4MW5vUys2M1pNM0lYVWREWGQKY1B6eU5RaHdTc1RyUUVSQ0hBZWQ2Q1FiekxSajBtR3BnNFVwK25jaGV1aTJjNUpEZXBUVUpEaDA3RFFBSkZzdwpYOFI1cDluVi9QMkZsV3hBb005TndXVUN3UUtCZ1FEUXlLMXJIRG13ZmVFZk1hVWhQV1FMMngxWFU3NjFEdVNiCm8raVJtUndyWmxiTm9xV2hVVjVyZGo3S3NPMElMM1REN0EyYm9JeFp1eTRpeG5sTzQyd1Jya0pzZzY4QWV3amoKQm40ZG1ucDFkaU83TzYvQ1I2c1g4TFhGSDB6bVFGUXovRnV4aUFmTGxpeVVncUErMXhCZE9na0phV0JSNGVhbwoyUWdUNXEzL3RRS0JnQ216VWZyaDFrUmtZa2hTanhaNnNvV0kwRlU3UnJUMHZrbGltK2t0cnBGWDhWNzBLRkFYCkpQYXNCVFdQYUpHWlJmcVlXUHR0L3hCS1BQMDdVeDVRa2tjVThmUktCUGpnUEZxWDhuOGlLMEpUdFJRS1RSb1MKTGNuKzdvWGtWeVV6U3drcGdYWExHNkNNRG91UHM5UG1RUjhleHdKTXpVd3RWMExyMzNQZkxmcUJBb0dCQU1tWgpuT3FhUEpKUldubTJoRTdPYXJhUUE0cjVVR0tnV05wNHNPODJPdDhsV0pnRGY0OS9kSDZybFFJL1NRSG9ZUVYxCi84WFFodlYyS3B4bHJXa2hiSTYrQjJHazNlekc0TlBteHd4cXgraDRCUlNjRTZDemQyQU1qRmdsV3luUjMveTYKcHdlTDVJc1BIVWpod1Q0c2lKNmNsWEZERVVDL3N1eERkT3RTaVowcEFvR0JBTVBaSEZacnhibHg0TTFPYnlxbAowcFVKd0FxeEdTekJZMDBFNjhvckNJOVpCVWVrQVJKWTNVRklmYkJGWCszQUJ1dndSNmNEeElMY2dobk5SNEl3Cmo4Q3RsbVN1Y2pEalYzV2ROVlZhUnk5YzZHWTB1OXNpRjZhbFNMRmV6ZVdNVTkyclBDUUwrZE01d2xLUnl6UVQKU09zOWtiU2MrL3NuSml6d0RHSitNQ3JCCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lKQUxhekJkQnErNjJjTUEwR0NTcUdTSWIzRFFFQkN3VUFNRTh4Q3pBSkJnTlYKQkFZVEFrZENNUTh3RFFZRFZRUUlEQVpFWlc1cFlXd3hEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRU1NQW9HQTFVRQpDZ3dEUkdsek1SQXdEZ1lEVlFRRERBZHRiMjVuYjJSaU1CNFhEVEUyTURjeU5USXpNakl6TjFvWERUSXhNRGN5Ck5ESXpNakl6TjFvd1R6RUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmtSbGJtbGhiREVQTUEwR0ExVUUKQnd3R1RHOXVaRzl1TVF3d0NnWURWUVFLREFORWFYTXhFREFPQmdOVkJBTU1CMjF2Ym1kdlpHSXdnZ0VpTUEwRwpDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREY2UnZTS08rWm1IejlQN0dsN1JQbFVIMjRITUwzCmVlTXNSaXJnOEJSZEVYNDVERWZCRVEwNFJXYnJObDNxUjN1Vk4ySXBMaUZPeHZNTGhqcDMwVW8wNjR4U3NiNEwKNjhzbE82aC9zYXd5STc4Wlg4SEgwL3pLc2pRWG5JV01HUitwZHI2dHg2T2xoek9SMElwRjMrQmZSaVFta29DQwpITTBYTmpjN0IwbjErRjhEOWUwaEh4ZUM1TFpIZ3Q5dnlFenVQeEYydEZLTzJtRi8vYkZjOHpJMUg4RUFkdlhPCnRUVmxFN3dqOGM5TXZ1cHNkOG9hb1g0ZzJtbkcvUThrQjJ0MHZkL1E2b3RYSWlYYVdodlAvMnNYdXc0dXBoaHUKcFA2ZkVpd2p0T3ZrZU1aTDRvM09VOWlSRHZGamJCZXlQVk1heUFCUjVQdkVlbE9yczZ5Y2xqRjFBZ01CQUFHagpVREJPTUIwR0ExVWREZ1FXQkJUdWR6R29JWFQ1b1g1Q0oxbXFSZncwNThKL2RqQWZCZ05WSFNNRUdEQVdnQlR1CmR6R29JWFQ1b1g1Q0oxbXFSZncwNThKL2RqQU1CZ05WSFJNRUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQWpDdmZ1elBOVG5sV2hORVIzNUt3K0Vsb01Ubi90OFdNNGNJSzQ1TXZvNm1EaUpQNndqYTljTHBNSgpvZmlpRVNZYkpadUd5aUdZV0dhQXJrWWMwaGxaTWxNVVR2N2FBSjJDekZXcUMyTnhlYjM4OHgxQ1hnS1E1ZW5aCml3NCt5d3k1YTNPK2VHY0lGVkZtSFRSUTZ0b3hTUklNQTMzdzFGMU93czVpV2kxejRLRW92WFZxdGdtbFVtUHcKU1djWUU5QTlYdXIrQ1E2VjVRMm14QUNqa1U2dlREREZid3ZQSHp5R2NRNDN6YVFYbXBCNWQxeWMzZmVMMU83TQp6ZjhtVXRTdEhmT3RsYlREY2xTbXgxVko3SUNFa25NakpzYlp3bGUrTmN1dklFRkpIeXdIOE1wR3JkdXB4Z0t1CkdjRnFxZDhuSm5uWDFGbllRalY0ZjRiUmU2eDUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  resources:
    requests:
      cpu: 0.2m
      memory: 200Mi
    limits:
      cpu: 1m
      memory: 512Mi





# }

# Linkerd
# {
linkerd:
  image: "buoyantio/linkerd:latest"
  namespace: "linkerd"
  replica: "1"
  resources:
    requests:
      cpu: 0.2m
      memory: 200Mi
    limits:
      cpu: 1m
      memory: 512Mi
# }


# Elasticsearch
# {
elasticsearch:
  namespace: "elasticsearch"
  backup_bucket: "foundation-elasticsearch-backup"
  es_prefix: "dev-"
  affinity_key: "es-node-type"
  image: "quay.io/pires/docker-elasticsearch:6.2.2"
  # image: "docker.elastic.co/elasticsearch/elasticsearch:6.2.2"
  service_name: "elasticsearch-discovery"
  cluster_name: "beamery"
  plugins: ""
  # plugins: "repository-gcs,com.floragunn:search-guard-ssl:6.2.2-25.1"
  storage_size: "1Gi"
  storage_class: "fast"
  nodes:
  - name: master
    affinity_selector: es-master
    replica: 1
    resources:
      limits:
        memory: ""# 512Mi
        cpu: ""# 1
      requests:
        memory: 512Mi
        cpu: 25m
    heapSize: "512m"
  - name: client
    affinity_selector: es-client
    replica: 1
    resources:
      limits:
        memory: ""# 512Mi
        cpu: ""# 1
      requests:
        memory: 512Mi
        cpu: 25m
    heapSize: "512m"
  - name: data
    affinity_selector: es-data
    replica: 1
    resources:
      limits:
        memory: ""# 512Mi
        cpu: ""# 1
      requests:
        memory: 512Mi
        cpu: 25m
    heapSize: "512m"
# }
