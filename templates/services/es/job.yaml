---
apiVersion: batch/v1
kind: Job
metadata:
  name: es-index
  namespace: {{.elasticsearch.namespace}}
  labels:
    app: es-index
    component: elasticsearch
    role: jobs
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app: es-index
        component: elasticsearch
        role: jobs
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
      - name: es
        image: alpine
        command:
        - "/bin/sh"
        - "-xc"
        - >
          apk -U add curl;
          /config/rebuildElasticsearchIndices.sh
        env:
        - name: ES_PREFIX
          value: "{{.elasticsearch.es_prefix }}"
{{ range .elasticsearch.nodes }}
{{- $currentEsNode := . }}
{{- if eq $currentEsNode.name "data" }}
        - name: ES_REPLICA
          value: "$(({{ $currentEsNode.replica }}*2))"
        - name: ES_SHARD
          value: "{{ $currentEsNode.replica }}"
{{- end }}
{{- end }}
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        configMap:
          name: config-jobs
          defaultMode: 0766
      - name: podinfo
        downwardAPI:
          items:
          - path: "labels"
            fieldRef:
              fieldPath: metadata.labels
{{- if not .dev }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: es-backups
  namespace: {{.elasticsearch.namespace}}
  labels:
    app: es-backups
    component: elasticsearch
    role: cronjobs
spec:
  schedule: "00 23 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: es-backups
            component: elasticsearch
            role: cronjobs
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: OnFailure
          containers:
          - name: es-snapshot-repository
            image: alpine
            command:
            - "sh"
            - "-c"
            - >
              apk -U add curl;
              curl -s -k -X GET https://elasticsearch:9200/_cluster/health?wait_for_status=green&timeout=50s;
              curl -s -k -X PUT https://elasticsearch:9200/_snapshot/backups -H 'Content-Type:application/json' -d '{"type": "gcs", "settings": { "bucket": "{{.elasticsearch.backup_bucket}}","base_path": "'${ENV}/${REGION}/elasticsearch'","compress": "true" }}';
            env:
            - name: REGION
              value: "{{.elasticsearch._region}}"
            - name: ENV
              value: "{{.elasticsearch._env}}"
          - name: es-snapshot-make
            image: alpine
            command:
            - "sh"
            - "-c"
            - >
              apk -U add curl;
              curl -s -k -X GET https://elasticsearch:9200/_cluster/health?wait_for_status=green&timeout=50s;
              curl -s -k -X POST https://elasticsearch:9200/_snapshot/backups/snapshot_$(date +%Y%m%d-%H%M%S-%s)?wait_for_completion=true;
{{- end }}
