---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongod
  namespace: {{.mongodb.namespace}}
  labels:
    app: mongodb
    component: mongodb
    role: services
spec:
  serviceName: mongodb
  replicas: {{ .mongodb.replica }}
  template:
    metadata:
      labels:
        app: mongodb
        component: mongodb
        role: services
    spec:
{{- if not .dev }}
{{- if .mongodb.affinity_key }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: {{.mongodb.affinity_key}}
                  operator: In
                  values:
                  - {{.mongodb.affinity_selector}}
              topologyKey: kubernetes.io/hostname
{{- end }}
{{- end }}
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongod
        image: {{.mongodb.image}}
        # args:
        # - "--master"
        #   - "numactl"
        #   - "--interleave=all"
        #   - "mongod"
        #   - "--wiredTigerCacheSizeGB"
        #   - "0.1"
        #   - "--bind_ip"
        #   - "0.0.0.0"
        #   - "--replSet"
        #   - "MainRepSet"
        #   - "--auth"
        #   - "--clusterAuthMode"
        #   - "keyFile"
        #   - "--keyFile"
        #   - "/etc/secrets-volume/internal-auth-mongodb-keyfile"
        #   - "--setParameter"
        #   - "authenticationMechanisms=SCRAM-SHA-1"
#         resources:
#           requests:
# {{- if ne .mongodb.resources.requests.memory "" }}
#             memory: "{{ .mongodb.resources.requests.memory }}"
# {{- end }}
# {{- if ne .mongodb.resources.requests.cpu "" }}
#             cpu: "{{ .mongodb.resources.requests.cpu }}"
# {{- end }}
#           limits:
# {{- if ne .mongodb.resources.limits.memory "" }}
#             memory: "{{ .mongodb.resources.limits.memory }}"
# {{- end }}
# {{- if ne .mongodb.resources.limits.cpu "" }}
#             cpu: "{{ .mongodb.resources.limits.cpu }}"
# {{- end }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "root"
        ports:
        - name: mongo
          containerPort: 27017
        # volumeMounts:
        # - name: secrets-volume
        #   readOnly: true
        #   mountPath: /etc/secrets-volume
        # - name: data
        #   mountPath: /data/db
      volumes:
      - name: secrets-volume
        secret:
          secretName: shared-bootstrap-data
          defaultMode: 256
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: volume
        component: mongodb
        role: services
    spec:
      accessModes:
      - "ReadWriteOnce"
      storageClassName: {{.mongodb.storage_class}}
      resources:
        requests:
          storage: {{.mongodb.storage_size}}
