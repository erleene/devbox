---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: {{.redis.namespace}}
  labels:
    app: redis-cluster
spec:
  serviceName: redis-cluster
  replicas: {{.redis.replica}}
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/sh"
        - "-c"
        - >
          sysctl -w net.core.somaxconn=65535;
        securityContext:
          privileged: true
      containers:
      - name: redis-cluster
        # image: redis-cluster:v1
        image: {{.redis.image}}
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["redis-server"]
        args: ["/conf/redis.conf"]
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 20
          periodSeconds: 3
        resources:
          requests:
{{- if ne .redis.resources.requests.memory "" }}
            memory: "{{ .redis.resources.requests.memory }}"
{{- end }}
{{- if ne .redis.resources.requests.cpu "" }}
            cpu: "{{ .redis.resources.requests.cpu }}"
{{- end }}
          limits:
{{- if ne .redis.resources.limits.memory "" }}
            memory: "{{ .redis.resources.limits.memory }}"
{{- end }}
{{- if ne .redis.resources.limits.cpu "" }}
            cpu: "{{ .redis.resources.limits.cpu }}"
{{- end }}
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-config
          items: 
          - key: redis.conf
            path: redis.conf
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: volume
        component: redis
        role: services
    spec:
      accessModes:
      - "ReadWriteOnce"
      storageClassName: {{.redis.storage_class}}
      resources:
        requests:
          storage: {{.redis.storage_size}}
