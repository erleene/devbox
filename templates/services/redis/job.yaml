# ---
# kind: Job
# apiVersion: batch/v1
# metadata:
#   name: redis-cluster-job
#   namespace: {{.redis.namespace}}
# spec:
#   backoffLimit: 2
#   template:
#     metadata:
#       labels:
#         app: redis
#     spec:
#       restartPolicy: OnFailure
#       containers:
#       - name: cluster
#         image: ruby
#         command:
#         - "/bin/sh"
#         - "-cex"
#         - >
#            wget -O /usr/local/bin/peer-finder https://storage.googleapis.com/kubernetes-release/pets/peer-finder;
#            wget -O /usr/local/bin/redis-trib http://download.redis.io/redis-stable/src/redis-trib.rb;
#            chmod u+x /usr/local/bin/peer-finder /usr/local/bin/redis-trib;
#            gem install redis;
#            > /tmp/initial_peers;
#            while test $(cat /tmp/initial_peers | wc -l) -lt 6; do peer-finder -on-start 'tee > /tmp/initial_peers' -service redis-cluster -ns $POD_NAMESPACE; done;
#            for _instance in $(cat /tmp/initial_peers); do echo "$(perl -MSocket -e 'print inet_ntoa(scalar(gethostbyname("'${_instance}'")))'):6379" >> /tmp/redis_clusters; done;
#            redis-trib create --replicas 1 $(cat /tmp/redis_clusters);
#         env:
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
