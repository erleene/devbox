---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-pilot
  namespace: {{.istio.namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        istio: pilot
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-pilot
      containers:
      - name: discovery
        image: "docker.io/istio/pilot:0.8.0"
        imagePullPolicy: IfNotPresent
        args:
        - "discovery"
        ports:
        - containerPort: 8080
        - containerPort: 15010
        readinessProbe:
          httpGet:
            path: /v1/registration
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PILOT_THROTTLE
          value: "500"
        - name: PILOT_CACHE_SQUASH
          value: "5"
        resources:
        #   limits:
        #    cpu: 100m
        #    memory: 128Mi
        #   requests:
        #    cpu: 100m
        #    memory: 128Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/istio/config
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
      - name: istio-proxy
        image: "docker.io/istio/proxyv2:0.8.0"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 15003
        - containerPort: 15005
        - containerPort: 15007
        - containerPort: 15011
        args:
        - proxy
        - --serviceCluster
        - istio-pilot
        - --templateFile
        - /etc/istio/proxy/envoy_pilot.yaml.tmpl
        - --controlPlaneAuthPolicy
        - NONE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 128Mi
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: istio
      - name: istio-certs
        secret:
          secretName: "istio.istio-pilot"
          optional: true
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - amd64
      #           - ppc64le
      #           - s390x
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - weight: 2
      #       preference:
      #         matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - amd64
      #     - weight: 2
      #       preference:
      #         matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - ppc64le
      #     - weight: 2
      #       preference:
      #         matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - s390x
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-ingress
  namespace: {{.istio.namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        istio: ingress
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-ingress
      containers:
      - name: istio-ingress
        image: "docker.io/istio/proxy:0.8.0"
        args:
        - proxy
        - ingress
        - --discoveryAddress
        - istio-pilot:8080
        - --discoveryRefreshDelay
        - '1s'
        - --drainDuration
        - '45s'
        - --parentShutdownDuration
        - '1m0s'
        - --connectTimeout
        - '10s'
        - --serviceCluster
        - istio-ingress
        # - --zipkinAddress
        # - zipkin:9411
        # - --statsdUdpAddress
        # - istio-mixer:9125
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        - name: ingress-certs
          mountPath: /etc/istio/ingress-certs
          readOnly: true
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-ingress
          optional: true
      - name: ingress-certs
        secret:
          secretName: istio-ingress-certs
          optional: true
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-sidecard-injector
  namespace: {{.istio.namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        istio: sidecar-injector
    spec:
      serviceAccountName: istio-sidecar-injector
      containers:
      - name: istio-sidecar
        image: "docker.io/istio/sidecar_injector:0.8.0"
        imagePullPolicy: IfNotPresent
        args:
          - --caCertFile=/etc/istio/certs/root-cert.pem
          - --tlsCertFile=/etc/istio/certs/cert-chain.pem
          - --tlsKeyFile=/etc/istio/certs/key.pem
          - --injectConfig=/etc/istio/inject/config
          - --meshConfig=/etc/istio/config/mesh
          - --healthCheckInterval=2s
          - --healthCheckFile=/health
        volumeMounts:
        - name: config-volume
          mountPath: /etc/istio/config
          readOnly: true
        - name: certs
          mountPath: /etc/istio/certs
          readOnly: true
        - name: inject-config
          mountPath: /etc/istio/inject
          readOnly: true
        livenessProbe:
          exec:
            command:
              - /usr/local/bin/sidecar-injector
              - probe
              - --probe-path=/health
              - --interval=2s
          initialDelaySeconds: 4
          periodSeconds: 4
        readinessProbe:
          exec:
            command:
              - /usr/local/bin/sidecar-injector
              - probe
              - --probe-path=/health
              - --interval=2s
          initialDelaySeconds: 4
          periodSeconds: 4
      volumes:
      - name: config-volume
        configMap:
          name: istio
      - name: certs
        secret:
          secretName: istio.istio-sidecar-injector
      - name: inject-config
        configMap:
          name: istio-sidecar-injector
          items:
          - key: config
            path: config
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - amd64
      #           - ppc64le
      #           - s390x
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - weight: 2
      #       preference:
      #         matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - amd64
      #     - weight: 2
      #       preference:
      #         matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - ppc64le
      #     - weight: 2
      #       preference:
      #         matchExpressions:
      #         - key: beta.kubernetes.io/arch
      #           operator: In
      #           values:
      #           - s390x

# ---
# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   name: istio-pilot
#   namespace: {{.istio.namespace}}
# spec:
#   replicas: 1
#   template:
#     metadata:
#       annotations:
#         alpha.istio.io/sidecar: ignore
#       labels:
#         istio: pilot
#     spec:
#       serviceAccountName: istio-pilot
#       containers:
#       - name: discovery
#         image: docker.io/istio/pilot:0.1.6
#         env:
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.namespace
#         args:
#         - "discovery"
#         - "-v=2"
#         ports:
#         - name: http-discovery
#           containerPort: 8080
#       - name: apiserver
#         image: docker.io/istio/pilot:0.1.6
#         env:
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.namespace
#         args:
#         - "apiserver"
#         - "-v=2"
#         ports:
#         - name: http-apiserver
#           containerPort: 8081
# ---
# apiVersion: extensions/v1beta1
# kind: DaemonSet
# metadata:
#   name: istio-ingress
#   namespace: {{.istio.namespace}}
# spec:
#   template:
#     metadata:
#       annotations:
#         alpha.istio.io/sidecar: ignore
#       labels:
#         istio: ingress
#     spec:
#       # affinity:
#       #   nodeAffinity:
#       #     requiredDuringSchedulingIgnoredDuringExecution:
#       #       nodeSelectorTerms:
#       #         - matchExpressions:
#       #             - key: dedicated
#       #               operator: In
#       #               values:
#       #                 - istio-ingress
#       # tolerations:
#       # - key: dedicated
#       #   operator: "Equal"
#       #   value: istio-ingress
#       #   effect: "NoSchedule"
#       serviceAccountName: istio-ingress
#       containers:
#       - name: istio-ingress
#         image: docker.io/istio/proxy_debug:0.1.6
#         env:
#           - name: POD_NAMESPACE
#             valueFrom:
#               fieldRef:
#                 apiVersion: v1
#                 fieldPath: metadata.namespace
#         args:
#         - "proxy"
#         - "ingress"
#         - "-v=2"
#         ports:
#         - name: http
#           containerPort: 80
# {{- if .dev }}
#           hostPort: 80
# {{- end }}
#         - name: https
#           containerPort: 443
# {{- if .dev }}
#           hostPort: 443
# {{- end }}
