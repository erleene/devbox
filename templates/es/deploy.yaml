{{- $dev := .dev }}
{{- $namespace := .elasticsearch.namespace }}
{{- $image := .elasticsearch.image }}
{{- $plugins := .elasticsearch.plugins }}
{{- $service_name := .elasticsearch.service_name }}
{{- $cluster_name := .elasticsearch.cluster_name }}
{{- $affinity_key := .elasticsearch.affinity_key }}
{{- $storage_class := .elasticsearch.storage_class }}
{{- $storage_size := .elasticsearch.storage_size }}
{{ range .elasticsearch.nodes }}
{{- $currentEsNode := . }}
{{- if ne $currentEsNode.name "data" }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-{{ $currentEsNode.name }}
  namespace: {{ $namespace}}
  labels:
    app: es-{{ $currentEsNode.name }}
    component: elasticsearch
    role: services
spec:
  replicas: {{ $currentEsNode.replica }}
  template:
    metadata:
      labels:
        app: es-{{ $currentEsNode.name }}
        component: elasticsearch
        role: services
    spec:
      affinity:
{{- if not $dev }}
{{- if $affinity_key }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $affinity_key}}
                operator: In
                values:
                - {{ $currentEsNode.affinity_selector}}
{{- end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - es-{{ $currentEsNode.name }}
              topologyKey: "kubernetes.io/hostname"
{{- end }}
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: Always
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{ $image }}
        resources:
          requests:
{{- if ne $currentEsNode.resources.requests.memory "" }}
            memory: "{{ $currentEsNode.resources.requests.memory }}"
{{- end }}
{{- if ne $currentEsNode.resources.requests.cpu "" }}
            cpu: "{{ $currentEsNode.resources.requests.cpu }}"
{{- end }}
          limits:
{{- if ne $currentEsNode.resources.limits.memory "" }}
            memory: "{{ $currentEsNode.resources.limits.memory }}"
{{- end }}
{{- if ne $currentEsNode.resources.limits.cpu "" }}
            cpu: "{{ $currentEsNode.resources.limits.cpu }}"
{{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: "{{ $service_name }}"
        - name: CLUSTER_NAME
          value: "{{ $cluster_name }}"
{{- if eq $currentEsNode.name "master" }}
        - name: NUMBER_OF_MASTERS
          value: "{{ $currentEsNode.replica }}"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
{{- else }}
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
{{- end }}
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ $currentEsNode.heapSize }} -Xmx{{ $currentEsNode.heapSize }}"
        - name: ES_PLUGINS_INSTALL
          value: "{{ $plugins }}"
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
{{- if eq $currentEsNode.name "client" }}
        - containerPort: 9200
          name: http
          protocol: TCP
{{- end}}
        volumeMounts:
{{- if not $dev }}
        - name: commonstorage
          mountPath: /elasticsearch/config/certs
{{- end }}
        - name: elasticconfig
          mountPath: /elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
      - name: elasticconfig
        configMap:
          name: elasticconfig
{{- if not $dev }}
      - name: commonstorage
        secret:
          secretName: certs
{{- end }}
{{- else }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: es-{{ $currentEsNode.name }}
  namespace: {{ $namespace }}
  labels:
    app: es-{{ $currentEsNode.name }}
    component: elasticsearch
    role: services
spec:
  serviceName: elasticsearch
  replicas: {{ $currentEsNode.replica }}
  template:
    metadata:
      labels:
        app: es-{{ $currentEsNode.name }}
        component: elasticsearch
        role: services
    spec:
      affinity:
{{- if not $dev }}
{{- if $affinity_key }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $affinity_key}}
                operator: In
                values:
                - {{ $currentEsNode.affinity_selector}}
{{- end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - es-data
              topologyKey: "kubernetes.io/hostname"
{{- end}}
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: {{ $image }}
        resources:
          requests:
{{- if ne $currentEsNode.resources.requests.memory "" }}
            memory: "{{ $currentEsNode.resources.requests.memory }}"
{{- end }}
{{- if ne $currentEsNode.resources.requests.cpu "" }}
            cpu: "{{ $currentEsNode.resources.requests.cpu }}"
{{- end }}
          limits:
{{- if ne $currentEsNode.resources.limits.memory "" }}
            memory: "{{ $currentEsNode.resources.limits.memory }}"
{{- end }}
{{- if ne $currentEsNode.resources.limits.cpu "" }}
            cpu: "{{ $currentEsNode.resources.limits.cpu }}"
{{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: "{{ $service_name }}"
        - name: CLUSTER_NAME
          value: "{{ $cluster_name }}"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_DATA
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ $currentEsNode.heapSize }} -Xmx{{ $currentEsNode.heapSize }}"
        - name: ES_PLUGINS_INSTALL
          value: "{{ $plugins }}"
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /data
{{- if not $dev }}
        - name: commonstorage
          mountPath: /elasticsearch/config/certs
{{- end }}
        - name: elasticconfig
          mountPath: /elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
      - name: elasticconfig
        configMap:
          name: elasticconfig
{{- if not $dev }}
      - name: commonstorage
        secret:
          secretName: certs
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: volume
        component: elasticsearch
        role: services
    spec:
      accessModes:
      - "ReadWriteOnce"
      storageClassName: {{ $storage_class}}
      resources:
        requests:
          storage: {{ $storage_size}}
{{- end }}
{{- end }}
