---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
  namespace: linkerd
data:
  nginx.conf: |-
    worker_processes 1;

    events { worker_connections 1024; }

    http {
        sendfile on;
        server {
            listen 80;
            # a test endpoint that returns http 200s
            location / {
                proxy_pass http://httpstat.us/200;
                proxy_set_header  X-Real-IP  $remote_addr;
            }
        }
        server {
            listen 80;
            server_name beamery.local;
            location / {
                proxy_pass http://l5d.linkerd.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                more_clear_input_headers 'l5d-ctx-*' 'l5d-dtab' 'l5d-sample';
            }
        }
        server {
            listen 80;
            server_name api.beamery.local;
            location / {
                proxy_pass http://l5d.linkerd.svc.cluster.local;
                proxy_set_header Host $host;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                more_clear_input_headers 'l5d-ctx-*' 'l5d-dtab' 'l5d-sample';
            }
        }
        # server {
        #     listen 80;
        #     server_name api-core;
        #     location / {
        #         # allow 'employees' to perform dtab overrides
        #         if ($cookie_special_employee_cookie != "letmein") {
        #           more_clear_input_headers 'l5d-ctx-*' 'l5d-dtab' 'l5d-sample';
        #         }
        #         # add a dtab override to get people to our beta, world-v2
        #         set $xheader "";
        #         if ($cookie_special_employee_cookie ~* "dogfood") {
        #           set $xheader "/host/api-core => /srv/api-core;";
        #         }
        #         # Test
        #         # {
        #         if ($request_method = 'OPTIONS') {
        #            add_header 'Access-Control-Allow-Origin' '*';
        #            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #            #
        #            # Custom headers and headers various browsers *should* be OK with but aren't
        #            #
        #            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #            #
        #            # Tell client that this pre-flight info is valid for 20 days
        #            #
        #            add_header 'Access-Control-Max-Age' 1728000;
        #            add_header 'Content-Type' 'text/plain; charset=utf-8';
        #            add_header 'Content-Length' 0;
        #            return 204;
        #         }
        #         if ($request_method = 'POST') {
        #            add_header 'Access-Control-Allow-Origin' '*';
        #            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        #         }
        #         if ($request_method = 'GET') {
        #            add_header 'Access-Control-Allow-Origin' '*';
        #            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        #         }
        #         # }

        #         proxy_set_header 'l5d-dtab' $xheader;
        #         proxy_pass http://l5d.linkerd.svc.cluster.local;
        #         proxy_set_header Host $host;
        #         proxy_set_header Connection "";
        #         proxy_http_version 1.1;
        #     }
        # }
    }
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx
  namespace: linkerd
spec:
  replicas: 1
  selector:
    app: nginx
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      containers:
      - name: nginx
        image: buoyantio/nginx:1.10.2
        ports:
        - containerPort: 80
          hostPort: 80
        volumeMounts:
        - name: "nginx-config"
          mountPath: "/etc/nginx/nginx.conf"
          subPath: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: nginx
  name: nginx
  namespace: linkerd
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: nginx
  type: LoadBalancer
